AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    signed_url

    SAM Template for signed_url
    
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Timeout: 5

Parameters:
    BucketName:
        Type: String
        Default: signed-url-test # TODO: change your bucket name

Resources:
    SignedUrlFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            CodeUri: signed_url/
            Handler: app.lambda_handler
            Runtime: ruby2.5
            Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
                Variables:
                    S3_BUCKET: !Ref BucketName
            Policies:
               S3ReadPolicy:
                    BucketName: !Ref BucketName
            Events:
                SignedUrl:
                    Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Path: /
                        Method: ANY
                        RestApiId: !Ref SignedUrlApi 

    SignedUrlApi:
        Type: AWS::Serverless::Api
        Properties:
            Name: SignedUrlApi
            StageName: Prod
            DefinitionBody:
              swagger: "2.0"
              basePath: '/Prod'
              info:
                title: !Ref AWS::StackName
              paths:
                /signed-url:
                  get:
                    parameters:
                    - name: "expires"
                      in: "query"
                      required: false
                      type: "string"
                    - name: "key"
                      in: "query"
                      required: true
                      type: "string"
                    responses: {}
                    x-amazon-apigateway-request-validator: "QuerystringRequestValidator"
                    x-amazon-apigateway-integration:
                      uri:
                        !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SignedUrlFunction.Arn}/invocations'
                      passthroughBehavior: "when_no_match"
                      httpMethod: POST
                      type: "aws_proxy"
                    security:
                      - api_key: []
              securityDefinitions:
                api_key:
                  type: "apiKey"
                  name: "x-api-key"
                  in: "header"
              x-amazon-apigateway-request-validators:
                QuerystringRequestValidator:
                  validateRequestParameters: true
                  validateRequestBody: false

    ConfigLambdaPermission:
        Type: "AWS::Lambda::Permission"
        DependsOn:
        - SignedUrlFunction
        Properties:
            Action: lambda:InvokeFunction
            FunctionName: !Ref SignedUrlFunction
            Principal: apigateway.amazonaws.com

    SignedUrlApiKey:
        Type: AWS::ApiGateway::ApiKey
        DependsOn: SignedUrlApi
        Properties: 
            Name: signed-url-api-key
            Enabled: true
            StageKeys: 
                - RestApiId: 
                      Ref: SignedUrlApi
                  StageName: Prod

    SignedUrlApiUsagePlan:
        Type: AWS::ApiGateway::UsagePlan
        DependsOn: SignedUrlApi
        Properties:
            ApiStages:
            - ApiId: !Ref SignedUrlApi
              Stage: !Ref SignedUrlApiProdStage
            UsagePlanName: signed-url-api-usage-plan
  
    SignedUrlApiUsagePlanKey:
      Type: AWS::ApiGateway::UsagePlanKey
      DependsOn:
          - SignedUrlApiKey
          - SignedUrlApiUsagePlan
      Properties : 
          KeyId: !Ref SignedUrlApiKey
          KeyType: API_KEY
          UsagePlanId: !Ref SignedUrlApiUsagePlan

Outputs:
    SignedUrlApi:
      Description: "API Gateway endpoint URL for Prod stage for SignedUrl function"
      Value: !Sub "https://${SignedUrlApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/signed_url/"

    SignedUrlFunction:
      Description: "SignedUrl Lambda Function ARN"
      Value: !GetAtt SignedUrlFunction.Arn

    SignedUrlFunctionIamRole:
      Description: "Implicit IAM Role created for SignedUrl function"
      Value: !GetAtt SignedUrlFunctionRole.Arn
